// Generated by CoffeeScript 1.10.0
(function() {
  var debrief_block, experiment_blocks, instructions_block, post_trial_gap, psiturk, practice_stimuli, test_stimuli, welcome_block, empty_trial, text_input;

  psiturk = new PsiTurk(uniqueId, adServerLoc, mode);

  welcome_block = {
    type: "text",
    text: "Welcome to the experiment. Press any key to move to the instructions page."
  };

  instructions_block_1 = {
    type: "text",
    text: "<p>You will have to name a total of 61 images (grayscale, black and white, black silhouettes or black silhouettes' outlines). " +
      "We wish to know what each image looks like to you. " +
      "It could be any object or animal. Please be as specific as possible with your answers." +
      " For instance, write <i>mosquito</i> instead of <i>insect</i>. </p>"+
      " Please provide an answer even if you are not sure what it is that you see."+
      " All answers are correct, so there will be no performance measure as feedback in the end of the experiment."+
      " Please provide a name for each image using one or <i>maximum</i> two words.",
    timing_post_trial: 1000
  };
  instructions_block_2 = {
    type: "text",
    text: "<p> Before the image presentation there is a blank screen for 1 second. Then a fixation cross will appear in the middle of the window. "+
          "Please fixate on the cross and wait for the image to be presented at that position."+
          "The image will be displayed for about 1 second before it dissappears. After that you will be presented," +
          "with a text box, where you have to write your answer. </p>" +
          "<p>Make sure you only type the word(s) you chose to name the image and then press the Submit button. "+
          "Upon pressing the submit button, you will be asked to judge the certainty of your answer from 1 (uncertain) to 5 (completely certain). "+
          "<strong>By the time you rate your certainty by pressing a button (1-5), you initiate the presentation of the next image. Please stay focused during the experiment. </strong>"+
          "There is a practice session before the actual experiment to make you more familiar with it. "+
          "Press any key to start the practice session. </p>",
    timing_post_trial: 1000
  };

  practice_start = {
    type: "text",
    text: "<div class='center-content'><p><strong>You will now be presented with 4 practice images" +
      " before starting the actual test.</strong></p>" +
      "<p>Press any key to begin.</p></div>",
    timing_post_trial: 1000
  };

  practice_end = {
    type: "text",
    text: "<div class='center-content'><p><strong>You have successfully completed the practice session. Now you will be presented with actual test images.</strong></p>" +
	  "<p>Press any key to begin.</p></div>",
    timing_post_trial: 1000
  };

  post_trial_gap = function() {
    return Math.floor(Math.random() * 1500) + 750;
  };


  /* stimulus block */

  var test_stimuli = [
                    '/static/images/BLS_093.bmp',
                    '/static/images/BLS_096.bmp',
                    '/static/images/BLS_099.bmp',
                    '/static/images/BLS_101.bmp',
                    '/static/images/BLS_102.bmp',
                    '/static/images/BLS_108.bmp',
                    '/static/images/BLS_110.bmp',
                    '/static/images/BLS_114.bmp',
                    '/static/images/BLS_117.bmp',
                    '/static/images/BLS_123.bmp',
                    '/static/images/BLS_135.bmp',
                    '/static/images/BLS_136.bmp',
                    '/static/images/BLS_139.bmp',
                    '/static/images/BLS_140.bmp',
                    '/static/images/BLS_143.bmp',
                    '/static/images/GRY_001.bmp',
                    '/static/images/GRY_005.bmp',
                    '/static/images/GRY_009.bmp',
                    '/static/images/GRY_016.bmp',
                    '/static/images/GRY_017.bmp',
                    '/static/images/GRY_018.bmp',
                    '/static/images/GRY_023.bmp',
                    '/static/images/GRY_037.bmp',
                    '/static/images/GRY_044.bmp',
                    '/static/images/GRY_052.bmp',
                    '/static/images/GRY_057.bmp',
                    '/static/images/GRY_072.bmp',
                    '/static/images/GRY_080.bmp',
                    '/static/images/GRY_085.bmp',
                    '/static/images/GRY_092.bmp',
                    '/static/images/ORG_144.bmp',
                    '/static/images/ORG_151.bmp',
                    '/static/images/ORG_153.bmp',
                    '/static/images/ORG_158.bmp',
                    '/static/images/ORG_159.bmp',
                    '/static/images/ORG_161.bmp',
                    '/static/images/ORG_164.bmp',
                    '/static/images/ORG_171.bmp',
                    '/static/images/ORG_172.bmp',
                    '/static/images/ORG_173.bmp',
                    '/static/images/ORG_175.bmp',
                    '/static/images/ORG_185.bmp',
                    '/static/images/ORG_188.bmp',
                    '/static/images/ORG_192.bmp',
                    '/static/images/ORG_194.bmp',
                    '/static/images/WHS_198.bmp',
                    '/static/images/WHS_199.bmp',
                    '/static/images/WHS_206.bmp',
                    '/static/images/WHS_211.bmp',
                    '/static/images/WHS_220.bmp',
                    '/static/images/WHS_225.bmp',
                    '/static/images/WHS_230.bmp',
                    '/static/images/WHS_233.bmp',
                    '/static/images/WHS_234.bmp',
                    '/static/images/WHS_239.bmp',
                    '/static/images/WHS_243.bmp',
                    '/static/images/WHS_245.bmp',
                    '/static/images/WHS_246.bmp',
                    '/static/images/WHS_248.bmp',
                    '/static/images/WHS_255.bmp',
                    '/static/images/WHS_260.bmp'
  ];

  /*   Practice stimuli  */
  var practice_stimuli = ['/static/images/PRC_cherry.png',
                            '/static/images/PRC_flamingo.png',
                            '/static/images/PRC_elephant.png',
                            '/static/images/PRC_scissors.png'
                         ];


  function shuffleArray(array) {
    for (var i = array.length - 1; i > 0; i--) {
      var j = Math.floor(Math.random() * (i + 1));
      var temp = array[i];
      array[i] = array[j];
      array[j] = temp;
    }
    return array;
  }

  var test_trials = shuffleArray(test_stimuli);
  var practice_trials = shuffleArray(practice_stimuli);

  var all_images = [];
  all_images.push.apply(all_images, practice_trials);
  all_images.push.apply(all_images, test_trials);
  //psiturk.preloadImages(all_images);

  /* empty trial */
  empty_trial = {
    type: 'single-stim',
    stimulus: ["/static/images/empty.png"],
    timing_response: 1000,
    response_ends_trial: false,
    choices: 'none',
    timing_post_trial: 0,
    is_html: false,
	on_finish: function() {
		psiturk.recordTrialData(jsPsych.data.getLastTrialData());
		//psiturk.saveData();
	}
  }
    
  /* fixation trial */
  fixation_trial = {
    type: 'single-stim',
    stimulus: ["/static/images/fixation.png"],
    /*stimuli: ['<p style="font-size:32px; text-align:center; position: absolute; top: 50%; left: 0px; width: 100%; height: 32px">+</p>'],*/
    timing_response: 1000, // how long to show the fixation for in ms
    response_ends_trial: false,
    choices: 'none', // no valid keys
    timing_post_trial: 0, // no gap between fixation and image
    is_html: false,
	on_finish: function() {
		psiturk.recordTrialData(jsPsych.data.getLastTrialData());
		//psiturk.saveData();
	}
  }

  /* text box */
  text_input = {
    type: "survey-text",
    questions: ["What was the image that you saw?"],
    rows: [1],
    columns: [40],
	on_finish: function() {
		psiturk.recordTrialData(jsPsych.data.getLastTrialData());
		//psiturk.saveData();
	}
  };

  /* certainty trial*/
  certainty_trial = {
      type: "single-stim",
      stimulus: ["/static/images/prompt_control.png"],
      is_html: false,
      choices: [49, 50, 51, 52, 53],
      response_ends_trial: true,
	  on_finish: function() {
		psiturk.recordTrialData(jsPsych.data.getLastTrialData());
		//psiturk.saveData();
	  }
    }

  /* debrief block */
  debrief_block = {
    type: "text",
    text: "<div class='center-content'><p><strong>You have successfully comleted the task. Your results will be uploaded now and this window will close automatically when finished, please don't close this window manually.</strong></p>" +
      "<p>Press any key to finish the experiment.</p>" +
	  "<p>Thank you!</p></div>",
  };




  var experiment_blocks = [];

  experiment_blocks.push(welcome_block);
  experiment_blocks.push(instructions_block_1);
  experiment_blocks.push(instructions_block_2);

//////////////////////////////////////////////////////////////////

  experiment_blocks.push(practice_start);

  for (var i = 0; i < practice_trials.length; i++) {
    
    experiment_blocks.push(empty_trial);

    experiment_blocks.push(fixation_trial);

    experiment_blocks.push({
      type: 'single-stim',
      stimulus: [practice_trials[i]],
      timing_stim: 500,
      timing_response: 1000,
      timing_post_trial: 100,
      response_ends_trial: false,
	  on_finish: function() {
		psiturk.recordTrialData(jsPsych.data.getLastTrialData());
		//psiturk.saveData();
	  }
      //data: all_trials.data
      // other parameters for your image trial
    });

    experiment_blocks.push(text_input);

    experiment_blocks.push(certainty_trial);

  }

  experiment_blocks.push(practice_end);

//////////////////////////////////////////////////////////////////


  for (var i = 0; i < test_trials.length; i++) {

    experiment_blocks.push(empty_trial);
    
    experiment_blocks.push(fixation_trial);

    experiment_blocks.push({
      type: 'single-stim',
      stimulus: [test_trials[i]],
      timing_stim: 500,
      timing_response: 1000,
      timing_post_trial: 100,
      response_ends_trial: false,
	  on_finish: function() {
		psiturk.recordTrialData(jsPsych.data.getLastTrialData());
		//psiturk.saveData();
	  }
      //data: all_trials.data
      // other parameters for your image trial
    });

    experiment_blocks.push(text_input);

    experiment_blocks.push(certainty_trial);

  }
///////////////////////////////////////////////////////////////////

  experiment_blocks.push(debrief_block);
  
  jsPsych.pluginAPI.preloadImages(all_images, function(){ startExperiment(); });
  function startExperiment(){
	  jsPsych.init({
		display_element: $('#jspsych-target'),
		timeline: experiment_blocks,
		on_finish: function() {
		  psiturk.saveData({
			success: function() {
			  psiturk.completeHIT();
			}
		  });
		}
	  });
  }

}).call(this);

